# This workflow will build and push a Node.js application to an Azure Web App when a commit is pushed to your default branch or a pull request is created targeting the default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE_SERVER, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy Node.js app to Azure Web App - devablos-server

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: devablos-server    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './server' # path to the server project
  NODE_VERSION: '18.x'                  # set this to the node version to use
  AZURE_WEBAPP_SLOT_NAME: staging       # (optional) set this to the name of the deployment slot

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies and build server
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
        working-directory: ./server

      - name: Zip artifact for deployment
        run: |
          cd ./server
          zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: server-app
          path: release.zip

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production-Server'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: server-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure WebApp'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_SERVER }}
          package: ${{ github.workspace }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SSL_CERT: ${{ secrets.SSL_CERT_CONTENT }}
          SSL_KEY: ${{ secrets.SSL_KEY_CONTENT }}
